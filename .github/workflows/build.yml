name: veil-build

on:
  push:
    branches:
      - main

jobs:
  build-job:
    if: github.event_name == 'push' && contains(toJson(github.event.commits), '[ci skip]') == false
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        include:
          - os: macos-10.15
            args: --jerry-heaplimit=8192 --jerry-lto
            build_tag: x86_64-darwin
            package_tag: macos-x64
            test: enabled
          - os: ubuntu-18.04
            args: --jerry-heaplimit=8192 --jerry-lto
            build_tag: x86_64-linux
            package_tag: linux-x64
            test: enabled
          - os: windows-2019
            args: --jerry-heaplimit=8192
            build_tag: x86_64-windows
            package_tag: windows-x64
            test: enabled
          - os: ubuntu-18.04
            args: --jerry-heaplimit=8192 --target-os=linux --target-arch=arm --target-board=rpiv6
            build_tag: arm-linux-rpi
            package_tag: pi-armv6l
            toolchain: arm-rpi
            toolchain_version: 8.3.0
          - os: ubuntu-18.04
            args: --jerry-heaplimit=8192 --target-os=linux --target-arch=arm --target-board=rpiv7
            build_tag: arm-linux-rpi
            package_tag: pi-armv7l
            toolchain: arm-rpi
            toolchain_version: 8.3.0
          - os: ubuntu-18.04
            args: --jerry-heaplimit=8192 --target-os=linux --target-arch=aarch64 --target-board=rpiv8
            build_tag: aarch64-linux-rpi
            package_tag: pi-arm64
            toolchain: aarch64

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Yarn Cache
        uses: egordm/gha-yarn-node-cache@v1

      - name: Install GCC Toolchain
        if: matrix.toolchain
        uses: ./.github/actions/gcc-toolchain
        with:
          toolchain: ${{ matrix.toolchain }}
          version: ${{ matrix.toolchain_version }}

      - name: Build
        run: ./tools/build.py --n-api --no-init-submodule --buildtype=release --js-backtrace=ON ${{ matrix.args }}

      - name: Test
        if: matrix.test == 'enabled'
        run: ./test/runner.sh

      - name: Package
        run: ./tools/create-package.sh ${{ matrix.build_tag }} ${{ matrix.package_tag }}

      - name: Upload Runtime
        uses: actions/upload-artifact@v3
        with:
          name: veil-runtime-artifact
          if-no-files-found: error
          retention-days: 3
          path: |
            build/package/veil-*.tgz
            build/package/veil-*.zip
